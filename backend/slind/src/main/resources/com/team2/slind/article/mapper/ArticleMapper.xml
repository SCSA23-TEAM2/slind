<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team2.slind.article.mapper.ArticleMapper">

    <resultMap id="ArticleMap" type="Article" autoMapping="true">
        <id property="articlePk" column="article_pk"/>
        <association property="articleBoard" javaType="Board">
            <id property="boardPk" column="board_pk"/>
            <result property="title" column="board_title"/>
        </association>
        <collection property="comments" javaType="List" ofType="Comment">
            <id property="commentPk" column="comment_pk"/>
        </collection>
    </resultMap>

    <resultMap id="ArticleDetailMap" type="Article" autoMapping="true">
        <id property="articlePk" column="article_pk"/>
        <association property="articleBoard" javaType="Board">
            <id property="boardPk" column="board_pk"/>
            <result property="title" column="board_title"/>
        </association>
        <collection property="comments" javaType="List" ofType="Comment">
            <id property="commentPk" column="comment_pk"/>
        </collection>
    </resultMap>

    <insert id="saveArticle" parameterType="Article" >
        INSERT INTO tbl_article (article_pk, board_pk, member_pk, title, article_content)
        VALUES (seq_article_pk.NEXTVAL, #{articleBoard.boardPk}, #{memberPk}, #{title}, #{articleContent})
    </insert>
    <update id="updateArticle" parameterType="Article">
        UPDATE tbl_article
        SET
        title = #{title},
        article_content = #{articleContent}
        WHERE
        article_pk = #{articlePk}
    </update>
    <update id="deleteArticle" parameterType="Long">
        UPDATE tbl_article
        SET is_deleted = 1, deleted_dttm = SYSDATE
        WHERE article_pk = #{articlePk}

    </update>
    <update id="updateLikeCount">
        UPDATE tbl_article
        SET like_count = like_count + #{upCount}
        WHERE article_pk = #{articlePk}
    </update>
    <update id="updateDislikeCount">
        UPDATE tbl_article
        SET dislike_count = dislike_count + #{upCount}
        WHERE article_pk = #{articlePk}
    </update>
    <select id="findCreatedArticlePk" resultType="Long">
        SELECT seq_article_pk.CURRVAL FROM DUAL
    </select>

    <select id="findByPk" resultMap="ArticleMap" parameterType="Long">
        SELECT * FROM tbl_article WHERE article_pk=#{pk} and is_deleted = 0
    </select>
    <select id="findRecentArticles" resultMap="ArticleMap">
        SELECT a.article_pk, a.board_pk, a.title, a.view_count, a.like_count, a.dislike_count,
        b.board_pk AS board_pk, b.title AS board_title, c.comment_pk
        FROM tbl_article a
        LEFT JOIN tbl_board b ON a.board_pk = b.board_pk
        LEFT JOIN tbl_comment c ON a.article_pk = c.article_pk
        WHERE a.article_pk IN (
        SELECT article_pk
        FROM tbl_article
        WHERE is_deleted =0
        ORDER BY created_dttm DESC
        FETCH FIRST 10 ROWS ONLY
        )
        ORDER BY a.created_dttm DESC
    </select>
    <select id="findTotalRecords" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM tbl_article
        WHERE
            is_deleted = 0 AND
            board_pk = #{boardPk}
    </select>
    <select id="findByBoardPk" resultMap="ArticleMap">
        SELECT *
        FROM
        (
            SELECT
                a.article_pk, a.title, a.view_count, a.like_count, a.dislike_count, a.created_dttm,
                b.board_pk AS board_pk, b.title AS board_title, c.comment_pk
            FROM tbl_article a
            LEFT JOIN tbl_board b ON a.board_pk = b.board_pk
            LEFT JOIN tbl_comment c ON a.article_pk = c.article_pk
            WHERE a.article_pk IN
            (
                SELECT article_pk FROM
                (
                    SELECT article_pk, ROWNUM AS rnum
                    FROM
                    (
                        SELECT article_pk
                        FROM tbl_article
                        WHERE is_deleted = 0 AND board_pk = #{boardPk}
                        ORDER BY created_dttm DESC, article_pk DESC
                    )
                    WHERE ROWNUM <![CDATA[<=]]> #{offset} + #{articleListSize}
                )
                WHERE rnum > #{offset}
            )
        )
        ORDER BY created_dttm DESC, article_pk DESC
    </select>
    <select id="findCountByPk" resultType="Integer">
        SELECT COUNT(*) FROM tbl_article WHERE article_pk = #{articlePk}
    </select>
    <select id="findMemberByPk" resultType="Long">
        SELECT member_pk FROM tbl_article WHERE article_pk = #{articlePk}
    </select>
    <select id="findListByMemberPkFirst" resultMap="ArticleMap">
        SELECT a.article_pk, a.title, a.created_dttm,
        b.board_pk, b.title AS board_title
        FROM tbl_article a
        JOIN tbl_board b ON a.board_pk = b.board_pk
        WHERE a.member_pk = #{memberPk}
        AND a.is_deleted = 0
        ORDER BY a.article_pk DESC
        FETCH FIRST #{size}+1 ROWS ONLY
    </select>

    <select id="findListByMemberPk" resultMap="ArticleMap">
        SELECT a.article_pk, a.title AS title, a.created_dttm,
        b.board_pk, b.title AS board_title
        FROM tbl_article a
        JOIN tbl_board b ON a.board_pk = b.board_pk
        WHERE a.member_pk = #{memberPk}
        AND a.article_pk  &lt; #{lastPk}
        AND a.is_deleted = 0
        ORDER BY a.article_pk DESC
        FETCH FIRST #{size}+1 ROWS ONLY
    </select>
    <select id="findByBoardPkOrderByViewCount" resultMap="ArticleMap">
        SELECT *
        FROM
        (
            SELECT
                a.article_pk, a.title, a.view_count, a.like_count, a.dislike_count, a.created_dttm,
                b.board_pk AS board_pk, b.title AS board_title, c.comment_pk
            FROM tbl_article a
            LEFT JOIN tbl_board b ON a.board_pk = b.board_pk
            LEFT JOIN tbl_comment c ON a.article_pk = c.article_pk
            WHERE a.article_pk IN
            (
                SELECT article_pk FROM
                (
                    SELECT article_pk, ROWNUM AS rnum
                    FROM
                    (
                        SELECT article_pk
                        FROM tbl_article
                        WHERE is_deleted = 0 AND board_pk = #{boardPk}
                        ORDER BY view_count DESC, article_pk DESC
                    )
                WHERE ROWNUM <![CDATA[<=]]> #{offset} + #{articleListSize}
                )
            WHERE rnum > #{offset}
            )
        )
        ORDER BY view_count DESC, article_pk DESC
    </select>
    <select id="findByBoardPkOrderByLikeCount" resultMap="ArticleMap">
        SELECT *
        FROM
        (
            SELECT
            a.article_pk, a.title, a.view_count, a.like_count, a.dislike_count, a.created_dttm,
            b.board_pk AS board_pk, b.title AS board_title, c.comment_pk
            FROM tbl_article a
            LEFT JOIN tbl_board b ON a.board_pk = b.board_pk
            LEFT JOIN tbl_comment c ON a.article_pk = c.article_pk
            WHERE a.article_pk IN
            (
                SELECT article_pk FROM
                (
                    SELECT article_pk, ROWNUM AS rnum
                    FROM
                    (
                        SELECT article_pk
                        FROM tbl_article
                        WHERE is_deleted = 0 AND board_pk = #{boardPk}
                        ORDER BY like_count DESC, article_pk DESC
                    )
                    WHERE ROWNUM <![CDATA[<=]]> #{offset} + #{articleListSize}
                )
                WHERE rnum > #{offset}
            )
        )
        ORDER BY like_count DESC, article_pk DESC
    </select>


    <select id="findArticleDetail" resultType="ArticleDetailMapperDTO" parameterType="Long">
        SELECT
        a.article_pk AS articlePk,
        a.member_pk,
        b.board_pk AS boardPk,
        a.title AS title,
        a.article_content AS articleContent,
        m.nickname AS nickname,
        a.created_dttm
        FROM tbl_article a
        JOIN tbl_board b ON a.board_pk = b.board_pk
        JOIN tbl_member m ON a.member_pk = m.member_pk
        WHERE a.article_pk = #{articlePk}
        AND a.is_deleted = 0
    </select>

</mapper>