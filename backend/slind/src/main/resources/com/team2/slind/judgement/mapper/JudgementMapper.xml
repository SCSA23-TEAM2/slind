<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team2.slind.judgement.mapper.JudgementMapper">
    <resultMap id="judgementMap" type="Judgement" autoMapping="true">
        <id property="judgementPk" column="judgement_pk"/>
        <association property="member" javaType="Member" autoMapping="true">
            <id property="memberPk" column="member_pk"/>
            <result property="nickname" column="nickname"/>
        </association>
    </resultMap>
    <insert id="saveJudgementArticle" parameterType="Judgement">
        INSERT INTO tbl_judgement (judgement_pk, member_pk, article_pk, title, judgement_content)
        VALUES (seq_judgement_pk.NEXTVAL, #{member.memberPk}, #{articlePk}, #{title}, #{judgementContent})
    </insert>

    <insert id="saveJudgementBoard" parameterType="Judgement">
        INSERT INTO tbl_judgement (judgement_pk, member_pk, board_pk, title, judgement_content)
        VALUES (seq_judgement_pk.NEXTVAL, #{member.memberPk}, #{boardPk}, #{title}, #{judgementContent})
    </insert>
    <update id="updateViewCount" parameterType="Long">
        UPDATE tbl_judgement SET view_count = view_count+1
        WHERE judgement_pk = #{judgementPk}
    </update>

    <select id="findCreatedJudgementPk" resultType="Long">
        SELECT seq_judgement_pk.CURRVAL FROM DUAL
    </select>
    <select id="findJudgementByPk" parameterType="Long" resultMap="judgementMap">
        SELECT j.* FROM tbl_judgement j
        WHERE j.judgement_pk = #{judgementPk}
    </select>

    <select id="countByJudgementPk" parameterType="Long" resultType="int">
        SELECT COUNT(*) FROM tbl_judgement WHERE judgement_pk = #{judgementPk} and is_deleted = 0
    </select>

    <select id="findListByMemberPk" resultType="MyJudgementResponse">
        SELECT *
        FROM (
        SELECT
        j.judgement_pk, j.article_pk, a.title AS article_title, j.board_pk,
        b.title AS board_title, j.title, j.created_dttm
        FROM tbl_judgement j
        LEFT JOIN tbl_article a ON j.article_pk = a.article_pk
        LEFT JOIN tbl_board b ON j.board_pk = b.board_pk
        WHERE j.member_pk = #{memberPk}
        AND j.judgement_pk  &lt; #{lastPk}
        ORDER BY j.judgement_pk DESC
        )
        WHERE ROWNUM  &lt;= #{size} + 1
    </select>
    <select id="findListByMemberPkFirst" resultType="MyJudgementResponse">
        SELECT *
        FROM (
            SELECT j.judgement_pk, j.article_pk, a.title AS article_title, j.board_pk,
            b.title AS board_title, j.title, j.created_dttm
            FROM tbl_judgement j
            LEFT JOIN tbl_article a ON j.article_pk = a.article_pk
            LEFT JOIN tbl_board b ON j.board_pk = b.board_pk
            WHERE j.member_pk = #{memberPk}
            ORDER BY j.judgement_pk DESC
        )
        WHERE ROWNUM  &lt;= #{size} + 1
    </select>



    <select id="findByStatus" resultType="Judgement">
        SELECT *
        FROM tbl_judgement
        WHERE status = 'ON'
        AND is_deleted = 0
    </select>

    <update id="finishJudgementWin" parameterType="Long">
        UPDATE tbl_judgement SET
        status = 'WIN'
        WHERE judgement_pk = #{judgementPk}
    </update>

    <update id="finishJudgementLose" parameterType="Long">
        UPDATE tbl_judgement SET
        status = 'LOSE'
        WHERE judgement_pk = #{judgementPk}
    </update>
    <select id="findList" resultMap="judgementMap">
        SELECT *
        FROM (
            SELECT subquery.*, ROWNUM AS rnum
            FROM (
                SELECT
                    j.judgement_pk, j.article_pk, j.board_pk, j.title, j.judgement_content,
                    j.view_count, j.like_count, j.dislike_count, j.created_dttm,
                    m.member_pk AS member_pk, m.nickname AS nickname
                FROM tbl_judgement j
                LEFT JOIN tbl_member m ON j.member_pk = m.member_pk
                LEFT JOIN tbl_article a ON j.article_pk = a.article_pk
                LEFT JOIN tbl_board b ON j.board_pk = b.board_pk
                WHERE
                    j.is_deleted = 0 AND
                    (
                        a.is_deleted = 0 OR
                        b.is_deleted = 0
                    )
                ORDER BY j.created_dttm DESC, j.judgement_pk DESC
            ) subquery
            WHERE ROWNUM &lt;= #{offset} + #{judgementListSize}
        )
        WHERE rnum > #{offset}
        ORDER BY created_dttm DESC, judgement_pk DESC
    </select>
    <select id="findListOrderByViewCount" resultMap="judgementMap">
        SELECT *
        FROM (
            SELECT subquery.*, ROWNUM AS rnum
            FROM (
                SELECT
                    j.judgement_pk, j.article_pk, j.board_pk, j.title, j.judgement_content,
                    j.view_count, j.like_count, j.dislike_count, j.created_dttm,
                    m.member_pk AS member_pk, m.nickname AS nickname
                FROM tbl_judgement j
                LEFT JOIN tbl_member m ON j.member_pk = m.member_pk
                WHERE j.is_deleted = 0
                ORDER BY j.view_count DESC, j.judgement_pk DESC
            ) subquery
            WHERE ROWNUM &lt;= #{offset} + #{judgementListSize}
        )
        WHERE rnum > #{offset}
        ORDER BY view_count DESC, judgement_pk DESC
    </select>
    <select id="findListOrderByLikeCount" resultMap="judgementMap">
        SELECT *
        FROM (
            SELECT subquery.*, ROWNUM AS rnum
            FROM (
                SELECT
                    j.judgement_pk, j.article_pk, j.board_pk, j.title, j.judgement_content,
                    j.view_count, j.like_count, j.dislike_count, j.created_dttm,
                    m.member_pk AS member_pk, m.nickname AS nickname
                FROM tbl_judgement j
                LEFT JOIN tbl_member m ON j.member_pk = m.member_pk
                WHERE j.is_deleted = 0
                ORDER BY j.like_count DESC, j.judgement_pk DESC
            ) subquery
            WHERE ROWNUM &lt;= #{offset} + #{judgementListSize}
        )
        WHERE rnum > #{offset}
        ORDER BY like_count DESC, judgement_pk DESC
    </select>
    <select id="findTotalRecords" resultType="Long">
        SELECT COUNT(*)
        FROM tbl_judgement j
        LEFT JOIN tbl_article a ON j.article_pk = a.article_pk
        LEFT JOIN tbl_board b ON j.board_pk = b.board_pk
        WHERE
            j.is_deleted = 0 AND
            (
                a.is_deleted = 0 OR
                b.is_deleted = 0
            )
    </select>

    <select id="findPkByArticlePk" parameterType="Long" resultType="Long">
        SELECT judgement_pk FROM tbl_judgement WHERE article_pk = #{articlePk} AND status = 'ON'
    </select>
</mapper>